server:
  port: 8080
spring:
  application:
    name: "auth-service"
#  profiles:
#    active: native
  datasource:
    url: jdbc:mysql://localhost:3306/authsdb
    username: root
    password: root
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
  sql:
    init:
      mode: always
  config:
    import: "optional:configserver:http://localhost:8071/"
  kafka:
    bootstrap-servers: localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/



auth:
  outbound:
    identity:
      client-id: "286299218562-ur2avuo3vhf2hbsbuga3pkr27ejqhf67.apps.googleusercontent.com"
      client-secret: "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"
      redirect-uri: "http://localhost:3000/authenticate"
  jwt:
    signerKey: "1TjXchw5FloESb63Kc+DFhTARvpWL4jUGCwfGWxuG5SIf/1y/LgJxHnMqaF6A/ij"
    valid-duration: 3600 # in second
    refreshable-duration: 36000 # in seconds
  verify:
    code-duration: 86400000 # 24 * 60 * 60 * 1000 = 86400000 milli  --- 1 day

app:
  services:
    company: http://localhost:8090/company

info:
  app:
    name: "auth-service"
    description: "JobHunter Auth Application"
    version: "1.0"

logging:
  level:
    com:
      tuananh:
        authservice: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"
